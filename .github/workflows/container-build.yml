---
name: build base Container Image CI

on:
  push:
    branches:
      - '**'  # Run on any branch

  workflow_call:
    inputs:
      registry:
        required: false
        type: string
        default: ghcr.io
        description: "registry's remote url, default: ghcr.io"
      registry-path:
        required: true
        type: string
        description: "registry's path, eg. efficacy38/tailscale-derp"
      cache-from:
        required: false
        type: string
        description: >
          cache registry's path, eg. efficacy38/tailscale-derp. if not
          specified, it would be the registry-path
      context:
        required: true
        type: string
        description: |
          build context, which directory the dockerfile locate, e.g.: `.`

    secrets:
      registry-pat:
        required: true
        description: "registry's PAT, default: secrets.GITHUB_TOKEN"

jobs:
  build-and-push-base-image:
    runs-on: ubuntu-latest
    # permissions:
    # contents: read
    # packages: write
    steps:
      - name: Setup environment variables
        run: >
          echo "REGISTRY_CACHE=${{ github.event.inputs.registry-cache ||
          github.event.inputs.registry }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.registry-pat }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.registry }}/${{ inputs.registry-path }}
          tags: |
            type=sha
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=raw,value=latest

      - name: Build app image
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.context }}
          platforms: linux/amd64
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: >
            type=registry,ref=${{ inputs.registry }}/${{ inputs.registry-path }}
          cache-to: type=inline

      - name: Push the app image
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          push: true
